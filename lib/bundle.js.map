{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/game/coin.js","webpack:///./lib/game/default_listener.js","webpack:///./lib/game/music.js","webpack:///./lib/game/images.js","webpack:///./lib/game/magnet.js","webpack:///./lib/game/crypto_miner.js","webpack:///./lib/game/highscores.js","webpack:///./lib/index.js","webpack:///./lib/game/game.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","game_coin","[object Object]","image","game","this","x","Math","random","y","calcValue","slowdown","collected","index","here","stagger","round","multiplier","baseValue","x2","y2","coins","undefined","point","collect","default_listener","window","addEventListener","e","indexOf","keyCode","preventDefault","music","src","noLoop","document","createElement","setAttribute","style","display","body","appendChild","play","pause","magnet","Image","bitcoin","tron","penny","game_images","game_magnet","ctx","canvas","points","rotate","forward","rotationDiff","angle","rotation","translateX","width","dy","dx","maxReach","sound","initialMove","drawRotatingMagnet","drawMovingMagnet","returnedToStart","calculateMaxReach","drawString","calculateCoorOnCanvas","generateMagneticPoints","save","setTransform","translate","drawImage","restore","startRad","PI","x3","cos","y3","sin","push","forEach","coord","fillStyle","fillRect","sqrt","height","degrees","abs","handleCollectedCoins","length","names","setTimeout","flashMessage","map","pop","money","clearRect","handleRotate","playMusic","beginPath","strokeStyle","moveTo","lineTo","stroke","amt","newDx","newDy","crypto_miner_CryptoMiner","defaultCoins","time","coin","gameInterval","drawmagnet","setScoreboard","checkGameover","gameOver","drawCoins","advanceRound","reset","$j","empty","html","every","newCoin","message","flash","Array","isArray","mess","attr","handleKeypress","j","handleCollection","startButton","find","clearInterval","clearCanvas","showScoreInput","showScore","roundsLasted","moneyCollected","cryptoMiner","val","crypto_miner","game_highscores","highscoresHTML","highScoresFromDB","highscoreToggle","addListenerOnButton","getScores","fetchScores","makeHighscoresList","updateScore","addListenerOnFetch","on","firebase","database","ref","orderByChild","limitToLast","newScore","sortByRoundAndMoney","score","sortByMoney","sortByRound","keepOnlyFiveHighscores","sortedByRound","scores","sortedByRounds","sorted","rounds","keys","sort","reverse","score1","score2","concat","filter","snapshot","childScore","htmlScore","slice","nodes","pauseButton","gameOverButton","muteButton","lastDownTarget","moreMenu","getContext","startGame","pauseGame","handleKeydown","focusOnGame","children","includes","target","fill","setInterval","console","log","resetSelf","saveScore","getElementById","toUpperCase","game_game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Coin {\n  constructor(image, i, game) {\n    this.image = image;\n    this.name = image.name;\n    this.x = Math.random() * 500 + 50;\n    this.y = Math.random() * 260 + 90;\n    this.value = this.calcValue(image);\n    this.slowdown = image.slowdown;\n    this.collected = false;\n    this.index = i;\n    this.here = true;\n    this.game = game;\n    this.stagger = this.index % 2 ? (this.index % 3 + 1) * 1.5 : (this.index % 3 + 1) * -1.5;\n  }\n\n  calcValue(image) {\n    return Math.round(Math.random() * image.multiplier) + image.baseValue;\n  }\n\n  collect() {\n    this.x = this.game.x2 - this.stagger;\n    this.y = this.game.y2 - this.stagger * .8;\n    if (this.here && this.y < 95 && this.x > 235 && this.x < 345) {\n      this.here = false;\n      return this.game.coins[this.index] = undefined;\n    }\n  }\n\n  handleCollection(point) {\n    if (point[0] + 4 > this.x && point[0] < this.x + 24 &&\n      point[1] + 4 > this.y && point[1] < this.y + 24) {\n      this.collect();\n      this.collected = true;\n      return true;\n    }\n  }\n}\n\nexport default Coin;","const defaultListener = () => {\n  window.addEventListener('keydown', (e) => {\n    if ([37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n      e.preventDefault();\n    }\n  }, false);\n};\n\nexport default defaultListener;","class Music {\n  constructor(src, noLoop) {\n    this.music = document.createElement(\"audio\");\n    this.music.src = src;\n    this.music.setAttribute(\"preload\", \"auto\");\n    this.music.setAttribute(\"controls\", \"none\");\n    if (!noLoop) this.music.setAttribute(\"loop\", \"true\");\n    this.music.style.display = \"none\";\n    document.body.appendChild(this.music);\n  }\n\n  play() {\n    this.music.play();\n  }\n\n  pause() {\n    this.music.pause();\n  }\n}\n\nexport default Music;","const magnet = new Image();\nmagnet.src = './assets/images/magnet.png';\n\nconst bitcoin = new Image();\nbitcoin.multiplier = 120;\nbitcoin.baseValue = 80;\nbitcoin.slowdown = 5;\nbitcoin.name = 'bitcoin';\nbitcoin.src = './assets/images/bitcoin.png';\n\nconst tron = new Image();\ntron.multiplier = 40;\ntron.baseValue = 30;\ntron.slowdown = 2.3;\ntron.name = 'tron';\ntron.src = './assets/images/tron.png';\n\nconst penny = new Image();\npenny.multiplier = 0;\npenny.baseValue = 0.01;\npenny.slowdown = 1.3;\npenny.name = 'penny';\npenny.src = './assets/images/penny.png';\n\n\nexport default {\n  magnet,\n  bitcoin,\n  tron,\n  penny,\n};","import images from './images';\nimport Music from './music';\n\nclass Magnet {\n  constructor(ctx, canvas, game) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.game = game;\n    this.points = [];\n    this.rotate = true;\n    this.forward = true;\n    this.rotationDiff = 0;\n    this.angle = 1;\n    this.rotation = 130;\n    this.x = 0;\n    this.y = 0;\n    this.translateX = canvas.width / 2;\n    this.dy = 6;\n    this.dx = 6;\n    this.maxReach = 225;\n    this.sound = new Music('./assets/audio/sliding.mp3', true);\n    this.initialMove = true;\n  }\n\n  drawmagnet() {\n    if (this.rotate) {\n      this.drawRotatingMagnet();\n    } else {\n      this.drawMovingMagnet();\n    }\n  }\n\n  drawMovingMagnet() {\n    if (this.returnedToStart()) return;\n    this.calculateMaxReach();\n    this.drawString();\n    this.calculateCoorOnCanvas();\n    this.generateMagneticPoints();\n\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    if (this.x + this.dx > this.maxReach || this.y + this.dy > this.maxReach) {\n      this.dx = -this.dx;\n      this.dy = -this.dy;\n    }\n    this.ctx.translate(this.translateX, 50);\n    this.ctx.rotate(this.angle);\n    this.x += this.dx\n    this.y += this.dy;\n\n    this.ctx.drawImage(images.magnet, this.x, this.y);\n    this.ctx.restore();\n  }\n\n  generateMagneticPoints() {\n    this.points = [];\n    for (let startRad = 0; startRad < 2 * Math.PI; startRad += Math.PI / 10) {\n      const x3 = this.game.x2 + 33 * Math.cos(startRad);\n      const y3 = this.game.y2 + 33 * Math.sin(startRad);\n      this.points.push([x3, y3]);\n    }\n    this.points.forEach(coord => {\n      this.ctx.fillStyle = 'green';\n      this.ctx.fillRect(coord[0] + Math.random() * 5, coord[1] + Math.random() * 5, 3, 3);\n    });\n  }\n\n  calculateCoorOnCanvas() {\n    this.game.l = Math.sqrt(this.x ** 2 + this.y ** 2) + images.magnet.height / 2 + 10;\n    this.game.x2 = (this.translateX + this.game.l * Math.cos(this.angle + 0.785398));\n    this.game.y2 = (50 + this.game.l * Math.sin(this.angle + 0.785398));\n  }\n\n  calculateMaxReach() {\n    const degrees = this.rotation - this.rotationDiff;\n    if (degrees <= 90 && degrees >= 0) {\n      this.maxReach = Math.abs(degrees - 45) + 210;\n    } else if (degrees > 90) {\n      this.maxReach = 250 - (degrees - 90) * 2;\n    } else {\n      this.maxReach = 250 + degrees * 2;\n    }\n  }\n\n  returnedToStart() {\n    if (this.y <= 0 && this.dy < 0) {\n      this.rotate = true;\n      this.handleCollectedCoins();\n      this.dx = 6;\n      this.dy = 6;\n      this.initialMove = true;\n      this.sound.pause();\n      return true;\n    }\n  }\n\n  handleCollectedCoins() {\n    while (this.game.collected.length > 0) {\n      if (this.game.names.length > 1) {\n        setTimeout(() => {\n          this.game.flashMessage(this.game.names.map(name => ('+' + name)));\n          this.game.names = [];\n        }, 300);\n      } else {\n        this.game.flashMessage('+' + this.game.names.pop());\n      }\n      this.game.money += this.game.collected.pop();\n    }\n  }\n\n  drawRotatingMagnet() {\n    if (this.dx !== 6 || this.dy !== 6) {\n      this.dx = 6;\n      this.dy = 6;\n    }\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0)\n    this.angle = (this.rotation - this.rotationDiff) * Math.PI / 180;\n    this.ctx.translate(this.translateX, this.y + 50)\n    this.ctx.rotate(this.angle);\n    this.ctx.drawImage(images.magnet, 0, 0);\n    this.ctx.restore();\n    this.handleRotate();\n  }\n\n  handleRotate() {\n    if (this.forward) {\n      this.rotationDiff++;\n      if (this.rotationDiff === 175) {\n        this.forward = false;\n        this.rotationDiff--;\n      }\n    } else {\n      this.rotationDiff--;\n      if (this.rotationDiff < 0) {\n        this.forward = true;\n        this.rotationDiff++;\n      }\n    }\n  }\n\n  handleKeypress(key) {\n    if (key === 'ArrowDown') {\n      if (this.initialMove) {\n        if (this.ctx.playMusic) this.sound.play();\n        this.initialMove = false;\n      }\n      this.rotate = false;\n      if (this.dx < 0) {\n        this.dx = -this.dx;\n        this.dy = -this.dy;\n        if (this.y < 15.5 || !this.game.collected.length) {\n          this.dx = 6;\n          this.dy = 6;\n        }\n      } \n    } else if (key === 'ArrowUp' && !this.rotate) {\n      if (this.dx > 0) {\n        this.dx = -this.dx;\n        this.dy = -this.dy;\n      } else if (this.dx > -2.5) {\n        this.dx = this.dx * 1.05;\n        this.dy = this.dy * 1.05;\n      } else if (this.dx > -5) {\n        this.dx = this.dx * 1.15;\n        this.dy = this.dy * 1.15;\n      }\n    }\n  }\n\n  drawString() {\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.translate(this.translateX, 50)\n    this.ctx.rotate(this.angle);\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = 'white'\n    this.ctx.moveTo(0, 0);\n    this.ctx.lineTo(this.x, this.y);\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n\n  slowdown(amt) {\n    const newDx = this.dx / amt;\n    const newDy = this.dy / amt;\n\n    if (this.dx > 0) {\n      this.dx = -newDx;\n      this.dy = -newDy;\n    } else {\n      this.dx = newDx;\n      this.dy = newDy;\n    }\n  }\n\n}\n\nexport default Magnet;","import Coin from './coin';\nimport Music from './music';\nimport images from './images';\nimport Magnet from './magnet';\n\nclass CryptoMiner {\n  constructor(ctx, canvas) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.defaultCoins = [images.penny, images.tron, images.bitcoin];\n    this.round = 1;\n    this.money = 0;\n    this.time = 1800;\n    this.collected = [];\n    this.names = [];\n    this.coins = this.defaultCoins.map((coin, i) => new Coin(coin, i, this));\n    this.x2;\n    this.y2;\n    this.l;\n    this.gameInterval;\n    this.magnet = new Magnet(ctx, canvas, this);\n    this.music = new Music('./assets/audio/slowmotion.mp3');\n    this.pause = false;\n  }\n\n  play() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.magnet.drawmagnet();\n    this.playMusic();\n    this.setScoreboard();\n    this.checkGameover();\n  }\n  \n  playMusic() {\n    if (this.ctx.playMusic) {\n      this.music.play();\n    } else {\n      this.music.pause();\n    }\n  }\n\n  checkGameover() {\n    if (this.time <= 0) {\n      this.gameOver();\n    } else {\n      this.drawCoins(this.coins);\n      this.advanceRound();\n    }\n  }\n\n  setScoreboard(reset) {\n    if (reset) {\n      $j('#round').empty();\n      $j('#money').empty();\n      $j('#time').empty();\n    } else {\n      $j('#round').html(`Round: ${this.round}`);\n      $j('#money').html(`Money: ${Math.round(this.money * 100) / 100}`);\n      $j('#time').html(`Time: ${Math.round((this.time--) / 60)}`);\n    }\n  }\n\n  advanceRound() {\n    if (this.coins.every(coin => coin === undefined) && this.magnet.rotate) {\n      this.round += 1;\n      this.time += 960;\n      this.coins = [];\n      this.flashMessage(`Round ${this.round}!`);\n      for (let i = 0; i <= this.round + 2; i++) {\n        if (this.defaultCoins[i]) {\n          this.coins.push(new Coin(this.defaultCoins[i], i, this));\n        } else {\n          if (i % 7 === 0) {\n            const newCoin = this.defaultCoins[2];\n            this.coins.push(new Coin(newCoin, i, this));\n          } else {\n            const newCoin = this.defaultCoins[i % 3];\n            this.coins.push(new Coin(newCoin, i, this));\n          }\n        }\n      }\n    }\n  }\n\n  flashMessage(message) {\n    const flash = $j('.flash-message');\n    if (Array.isArray(message)) {\n      message.forEach((mess, i) => {\n        flash.html(mess);\n        flash.attr('style', 'opacity: 1; top: 0px');\n        setTimeout(\n          () => flash.attr('style', 'opacity: 0; top: 20px;'),\n          1000 + i * 500\n        );\n      })\n    } else {\n      flash.html(message);\n      flash.attr('style', 'opacity: 1; top: 0px');\n      setTimeout(\n        () => {\n          flash.attr('style', 'opacity: 0; top: 20px;');\n        },\n        1000\n      )\n    }\n  }\n\n  handleKeypress(key) {\n    if (!this.pause) this.magnet.handleKeypress(key);\n  }\n\n  drawCoins() {\n    for (let i = 0; i < this.coins.length; i++) {\n      const coin = this.coins[i];\n      if (coin === undefined) continue;\n      if (coin.collected) {\n        coin.collect();\n        this.ctx.drawImage(coin.image, coin.x, coin.y, 40, 40)\n        continue;\n      }\n\n      for (let j = 0; j < this.magnet.points.length; j++) {\n        const point = this.magnet.points[j];\n        if (coin.handleCollection(point)) {\n          this.collected.push(coin.value);\n          this.names.push(coin.name);\n          this.magnet.slowdown(coin.slowdown);\n          break;\n        }\n      }\n      this.ctx.drawImage(coin.image, coin.x, coin.y, 40, 40)\n    }\n  }\n\n  startGame() {\n    const startButton = $j('#start-button');\n    startButton.html('Start');\n    $j('#game-over').attr('style', 'display: none; position: absolute;')\n      .find('p').html('');\n    $j('#score-input').attr('style', 'display: none;');\n    startButton.attr('style', 'display: block;');\n  }\n\n  gameOver() {\n    clearInterval(this.gameInterval);\n    this.clearCanvas();\n    this.showScoreInput();\n    this.showScore();\n  }\n  \n  showScore() {\n    const roundsLasted = this.round > 1 ? this.round + ' rounds' : '1 round';\n    const moneyCollected = Math.round(this.money * 100) / 100;\n    $j('#game-over').attr('style', 'display: flex;')\n    .find('p').html(`You lasted ${roundsLasted}<br> and collected $${moneyCollected}!`);\n  }\n  \n  clearCanvas() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    $j('#pc').attr('style', 'display: none;');\n    $j('#pause-button').attr('style', 'display: none;')\n    this.music.pause();\n    this.ctx.cryptoMiner.setScoreboard(true);\n    $j('canvas').attr('style', \"background: url('./assets/images/sparkling_stars.gif') no-repeat; background-size: cover;\");\n  }\n  \n  showScoreInput() {\n    $j('#score-input').attr('style', 'display: block;');\n    $j('input').val();\n    $j('#enter-score').attr('style', 'display: block;');\n  }\n\n  resetSelf() {\n    this.ctx.cryptoMiner = new CryptoMiner(this.ctx, this.canvas);\n  }\n}\n\nexport default CryptoMiner;","class Highscores {\n  constructor() {\n    this.highscoresHTML = $j('#highscores');\n    this.highScoresFromDB = [];\n    this.highscoreToggle = this.highscoreToggle.bind(this);\n    this.addListenerOnButton();\n    this.getScores = this.fetchScores();\n    this.makeHighscoresList();\n    this.updateScore = this.updateScore.bind(this);\n    this.addListenerOnFetch();\n    setTimeout(this.updateScore, 3000);\n  }\n\n  highscoreToggle() {\n    if (this.highscoresHTML.attr('style') === 'display: block;') {\n      this.highscoresHTML.attr('style', 'display: none;')\n    } else {\n      this.highscoresHTML.attr('style', 'display: block;')\n    }\n  }\n\n  addListenerOnButton() {\n    $j('#highscore-button').on('click', this.highscoreToggle);\n  }\n\n  fetchScores() {\n    return firebase.database().ref('scores/')\n      .orderByChild(\"round\").limitToLast(5);\n  }\n\n  makeHighscoresList(newScore) {\n    if (!this.highscoresHTML) return;\n    this.highscoresHTML.html('<h3>High Scores</h3 >');\n\n    if (newScore) this.highScoresFromDB.push(newScore);\n\n    this.sortByRoundAndMoney();\n    \n    for (let i = 0; i < 5; i++) {\n      const score = this.highScoresFromDB[i];\n      if (!score) break;\n      this.highscoresHTML.html(\n        this.highscoresHTML.html() + \n        `<li><div class='score' ><h4><i class=\"fas fa-star shiny\"></i>${i + 1}. ` + \n        score[1]\n      );\n    }\n  };\n\n  sortByRoundAndMoney() {\n    this.highScoresFromDB = this.sortByMoney(this.sortByRound());\n    this.keepOnlyFiveHighscores();\n  }\n\n  sortByRound() {\n    const sortedByRound = {};\n    const scores = this.highScoresFromDB;\n    if (!scores.length) return false;\n\n    for (let i = 0; i < scores.length; i++) {\n      const score = scores[i];\n      if (!sortedByRound[score[0]]) sortedByRound[score[0]] = [];\n      sortedByRound[score[0]].push(score);\n    }\n    \n    return sortedByRound;\n  }\n\n  sortByMoney(sortedByRounds) {\n    let sorted = [];\n    if (!sortedByRounds) return [];\n    const rounds = Object.keys(sortedByRounds).sort().reverse();\n\n    for (let i = 0; i < rounds.length; i++) {\n      if (sorted.length >= 5) break;\n      sortedByRounds[rounds[i]].sort( (score1, score2) => score2[2] - score1[2] );\n      sorted = sorted.concat(sortedByRounds[rounds[i]]);\n    }\n    \n    return sorted;\n  }\n\n  keepOnlyFiveHighscores() {\n    this.highScoresFromDB = this.highScoresFromDB.filter( (score, i) => i < 5);\n  }\n  \n  addListenerOnFetch() {\n    this.getScores.on('child_added', (snapshot) => {\n      const childScore = snapshot.val();\n      const htmlScore = `${childScore.name.slice(0, 10)}</h4><h5>Rounds: ${childScore.round} Money: $${childScore.money}</h5></div></li>`;\n      if (this.highScoresFromDB.length < 5) {\n        this.highScoresFromDB.push([childScore.round, htmlScore, childScore.money]);\n        if (this.highScoresFromDB.length === 5) {\n          this.highScoresFromDB = this.highScoresFromDB.reverse();\n          this.makeHighscoresList();\n        }\n      } else {\n        this.makeHighscoresList([childScore.round, htmlScore, childScore.money]);\n      }\n    });\n  }\n\n  updateScore() {\n    if (this.highScoresFromDB.length < 5) {\n      this.getScores = this.fetchScores();\n\n      setTimeout(this.updateScore, 3000);\n    } else {\n      setTimeout(this.updateScore, 60000);\n    }\n  };\n}\n\nexport default Highscores;","import game from '/Users/Shirley/Desktop/Crypto-Miner/lib/game/game.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  game();\n})\n","import Coin from './coin';\nimport defaultListener from './default_listener';\nimport CryptoMiner from './crypto_miner';\nimport Highscores from './highscores';\n\nexport default function game() {\n  defaultListener();\n\n  const canvas = $j('#game-frame').nodes[0];\n  const startButton = $j('#start-button');\n  const pauseButton = $j('#pause-button');\n  const gameOverButton = $j('#game-over');\n  const muteButton = $j('#mute');\n  let lastDownTarget;\n  \n  const moreMenu = $j('#more-menu');\n  $j('#show-more').on('click', () => moreMenu.attr('style', 'display: block;'));\n  moreMenu.find('a').on('click', () => moreMenu.attr('style', 'display: none;'));\n\n  const highscores = new Highscores();\n  \n  if (canvas.getContext) {\n    const ctx = canvas.getContext('2d');\n    ctx.cryptoMiner = new CryptoMiner(ctx, canvas);\n    ctx.cryptoMiner.startGame();\n    ctx.playMusic = true;\n\n    const pauseGame = () => {\n      startButton.attr('style', 'display: block; left: 173px;').html('Unpause');\n      pauseButton.attr('style', 'display: none;');\n      ctx.cryptoMiner.music.pause();\n      ctx.cryptoMiner.pause = true;\n      clearInterval(ctx.cryptoMiner.gameInterval);\n    }\n\n    const handleKeydown = (e) => {\n      ctx.cryptoMiner.handleKeypress(e.key);\n    };\n    \n    const focusOnGame = [canvas, startButton.nodes[0], pauseButton.nodes[0], gameOverButton.nodes[0], muteButton.nodes[0], muteButton.children().nodes[0]];\n    document.addEventListener('keydown', (e) => {\n      if (focusOnGame.includes(lastDownTarget)) {\n        handleKeydown(e);\n      }\n    }, false);\n\n    document.addEventListener('mousedown', (e) => {\n      lastDownTarget = e.target;\n      if (!focusOnGame.includes(lastDownTarget) && startButton.attr('style') !== 'display: block;') pauseGame();\n    }, false);\n\n    const startGame = () => {\n      $j('#panel').attr('style', 'display: block;');\n      $j('#pc').attr('style', 'display: block;');\n      ctx.fillStyle = '#010014';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.fill();\n      pauseButton.attr('style', 'display: block;')\n      $j('canvas').attr('style', \"background: url('./assets/images/moving_stars.gif') no-repeat; background-size: cover;\");\n      startButton.attr('style', 'display: none;');\n      ctx.cryptoMiner.pause = false;\n      ctx.cryptoMiner.gameInterval = setInterval(() => ctx.cryptoMiner.play(), 17);\n    };\n    \n    startButton.on('click', startGame);\n\n    pauseButton.on('click', pauseGame);\n\n    document.addEventListener('keypress', (e) => {\n      console.log(e.key, startButton.html())\n      if (e.key === 'p' && ctx.cryptoMiner.gameInterval) {\n        if (ctx.cryptoMiner.pause) {\n          startGame();\n        } else {\n          pauseGame();\n        }\n      } else if (e.key === 'm') {\n        ctx.playMusic = !ctx.playMusic;\n      } else if (e.key === 'r') {\n        ctx.cryptoMiner.gameOver();\n        ctx.cryptoMiner.resetSelf();\n        ctx.cryptoMiner.startGame();\n      } else if (e.key === 'Enter' && startButton.html() === 'Start' && startButton.attr('style') === 'display: block;') {\n        startGame();\n      } \n    });\n\n    $j('#mute').on('click', () => {\n      ctx.playMusic = !ctx.playMusic;\n    });\n\n    const saveScore = (money, round) => {\n      const newScore = {};\n      newScore.name = document.getElementById(\"input\").value.toUpperCase();\n      if (newScore.name.length === 0) newScore.name = '???'\n      newScore.money = Math.round(money * 100) / 100;\n      newScore.round = round;\n      firebase.database().ref('scores/').push(newScore);\n    };\n\n    $j('#game-over').find('b').on('click', () => {\n      ctx.cryptoMiner.resetSelf();\n      ctx.cryptoMiner.startGame();\n    });\n    $j('#score-input').on('submit', (e) => {\n      e.preventDefault();\n      saveScore(ctx.cryptoMiner.money, ctx.cryptoMiner.round);\n      ctx.cryptoMiner.resetSelf();\n      ctx.cryptoMiner.startGame();\n    });\n    $j('#game-over').find('b').on('mouseover', () => {\n      $j('#game-over').find('b').html('RESTART');\n    });\n    $j('#game-over').find('b').on('mouseout', () => {\n      $j('#game-over').find('b').html('GAME OVER');\n    });\n  }\n}"],"sourceRoot":""}