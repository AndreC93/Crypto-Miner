{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/game/coin.js","webpack:///./lib/game/crypto_miner.js","webpack:///./lib/game/default_listener.js","webpack:///./lib/game/game.js","webpack:///./lib/game/images.js","webpack:///./lib/game/magnet.js","webpack:///./lib/game/music.js","webpack:///./lib/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;AClCnB;AAAA;AAAA;AAAA;AAAA;AAA0B;AACE;AACE;AACA;;AAE9B;AACA;AACA;AACA;AACA,yBAAyB,+CAAM,QAAQ,+CAAM,OAAO,+CAAM;AAC1D;AACA;AACA;AACA;AACA;AACA,wDAAwD,6CAAI;AAC5D;AACA;AACA;AACA;AACA,sBAAsB,+CAAM;AAC5B,qBAAqB,8CAAK;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kCAAkC,WAAW;AAC7C,kCAAkC,mCAAmC;AACrE,gCAAgC,+BAA+B;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C,qBAAqB,qBAAqB;AAC1C;AACA,8BAA8B,6CAAI;AAClC,SAAS;AACT;AACA,8BAA8B,6CAAI;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,sCAAsC;AACtC;AACA;AACA,0CAA0C,WAAW;AACrD,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,oBAAoB;AACtE;AACA,oDAAoD;AACpD,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD,kCAAkC,aAAa,sBAAsB,eAAe;AACpF;;AAEA;AACA;AACA,2CAA2C;AAC3C,qDAAqD;AACrD;AACA;AACA,iGAAiG,wBAAwB;AACzH;;AAEA;AACA,qDAAqD;AACrD;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;AC5K1B;AAAA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEe,8EAAe,E;;;;;;;;;;;;ACR9B;AAAA;AAAA;AAAA;AAAA;AAA0B;AACuB;AACR;;AAE1B;AACf,EAAE,iEAAe;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E;AAC5E,6EAA6E;;AAE7E;AACA;AACA,yDAAyD;AACzD,kDAAkD;AAClD,KAAK;AACL,mDAAmD;AACnD;AACA,GAAG;;AAEH;AACA;AACA,0BAA0B,qDAAW;AACrC;AACA;;AAEA;AACA,gDAAgD,aAAa;AAC7D,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iGAAiG;AACjG,KAAK;;AAEL;AACA,iDAAiD;AACjD,8CAA8C;AAC9C;AACA;AACA;AACA,gDAAgD;AAChD,gGAAgG,wBAAwB;AACxH,+CAA+C;AAC/C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,C;;;;;;;;;;;;ACnHA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAA8B;AACF;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAK;AAC1B;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,+CAAM;AAC7B;AACA;;AAEA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,yDAAyD,+CAAM;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAM;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEe,qEAAM,E;;;;;;;;;;;;ACpMrB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACpBpB;AAAA;AAAwE;;AAExE;AACA,EAAE,oGAAI;AACN,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/index.js\");\n","class Coin {\n  constructor(image, i, game) {\n    this.image = image;\n    this.name = image.name;\n    this.x = Math.random() * 500 + 50;\n    this.y = Math.random() * 260 + 90;\n    this.value = image.value;\n    this.slowdown = image.slowdown;\n    this.collected = false;\n    this.index = i;\n    this.here = true;\n    this.game = game;\n    this.stagger = this.index % 2 ? (this.index % 3 + 1) * 1.5 : (this.index % 3 + 1) * -1.5;\n  }\n\n  collect() {\n    this.x = this.game.x2 - this.stagger;\n    this.y = this.game.y2 - this.stagger * .8;\n    if (this.y < 98 && this.here && this.x > 235 && this.x < 345) {\n      this.here = false;\n      return this.game.coins[this.index] = undefined;\n    }\n  }\n\n  handleCollection(point) {\n    if (point[0] + 4 > this.x && point[0] < this.x + 24 &&\n      point[1] + 4 > this.y && point[1] < this.y + 24) {\n      this.collect();\n      this.collected = true;\n      return true;\n    }\n  }\n}\n\nexport default Coin;","import Coin from './coin';\nimport Music from './music';\nimport images from './images';\nimport Magnet from './magnet';\n\nclass CryptoMiner {\n  constructor(ctx, canvas) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.defaultCoins = [images.penny, images.tron, images.bitcoin];\n    this.round = 1;\n    this.money = 0;\n    this.time = 1800;\n    this.collected = [];\n    this.names = [];\n    this.coins = this.defaultCoins.map((coin, i) => new Coin(coin, i, this));\n    this.x2;\n    this.y2;\n    this.l;\n    this.gameInterval;\n    this.magnet = new Magnet(ctx, canvas, this);\n    this.music = new Music('./assets/audio/slowmotion.mp3');\n    this.pause = false;\n  }\n\n  play() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.magnet.drawmagnet();\n    this.playMusic();\n    this.setScoreboard();\n    this.checkGameover();\n  }\n  \n  playMusic() {\n    if (this.ctx.playMusic) {\n      this.music.play();\n    } else {\n      this.music.pause();\n    }\n  }\n\n  checkGameover() {\n    if (this.time <= 0) {\n      this.gameOver();\n    } else {\n      this.drawCoins(this.coins);\n      this.advanceRound();\n    }\n  }\n\n  setScoreboard(reset) {\n    if (reset) {\n      $j('#round').empty();\n      $j('#money').empty();\n      $j('#time').empty();\n    } else {\n      $j('#round').html(`Round: ${this.round}`);\n      $j('#money').html(`Money: ${Math.round(this.money * 100) / 100}`);\n      $j('#time').html(`Time: ${Math.round((this.time--) / 60)}`);\n    }\n  }\n\n  advanceRound() {\n    if (this.coins.every(coin => coin === undefined) && this.magnet.rotate) {\n      this.round += 1;\n      this.time += 960;\n      this.coins = [];\n      this.flashMessage(`Round ${this.round}!`);\n      for (let i = 0; i <= this.round + 2; i++) {\n        if (this.defaultCoins[i]) {\n          this.coins.push(new Coin(this.defaultCoins[i], i, this));\n        } else {\n          const newCoin = this.defaultCoins[Math.round(Math.random() * 2)];\n          this.coins.push(new Coin(newCoin, i, this));\n        }\n      }\n    }\n  }\n\n  flashMessage(message) {\n    const flash = $j('.flash-message');\n    if (Array.isArray(message)) {\n      message.forEach((mess, i) => {\n        flash.html(mess);\n        flash.attr('style', 'opacity: 1; top: 0px');\n        setTimeout(\n          () => flash.attr('style', 'opacity: 0; top: 20px;'),\n          1000 + i * 500\n        );\n      })\n    } else {\n      flash.html(message);\n      flash.attr('style', 'opacity: 1; top: 0px');\n      setTimeout(\n        () => {\n          flash.attr('style', 'opacity: 0; top: 20px;');\n        },\n        1000\n      )\n    }\n  }\n\n  handleKeypress(key) {\n    if (!this.pause) this.magnet.handleKeypress(key);\n  }\n\n  drawCoins() {\n    for (let i = 0; i < this.coins.length; i++) {\n      const coin = this.coins[i];\n      if (coin === undefined) continue;\n      if (coin.collected) {\n        coin.collect();\n        this.ctx.drawImage(coin.image, coin.x, coin.y, 40, 40)\n        continue;\n      }\n\n      for (let j = 0; j < this.magnet.points.length; j++) {\n        const point = this.magnet.points[j];\n        if (coin.handleCollection(point)) {\n          this.collected.push(coin.value);\n          this.names.push(coin.name);\n          this.magnet.slowdown(coin.slowdown);\n          break;\n        }\n      }\n      this.ctx.drawImage(coin.image, coin.x, coin.y, 40, 40)\n    }\n  }\n\n  startGame() {\n    const startButton = $j('#start-button');\n    startButton.html('Start');\n    $j('#game-over').attr('style', 'display: none; position: absolute;')\n      .find('p').html('');\n    $j('#score-input').attr('style', 'display: none;');\n    startButton.attr('style', 'display: block;');\n  }\n\n  gameOver() {\n    clearInterval(this.gameInterval);\n    this.clearCanvas();\n    this.showScoreInput();\n    this.showScore();\n  }\n  \n  showScore() {\n    const roundsLasted = this.round > 1 ? this.round + ' rounds' : '1 round';\n    const moneyCollected = Math.round(this.money * 100) / 100;\n    $j('#game-over').attr('style', 'display: flex;')\n    .find('p').html(`You lasted ${roundsLasted}<br> and collected $${moneyCollected}!`);\n  }\n  \n  clearCanvas() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    $j('#pc').attr('style', 'display: none;');\n    $j('#pause-button').attr('style', 'display: none;')\n    this.music.pause();\n    this.ctx.cryptoMiner.setScoreboard(true);\n    $j('canvas').attr('style', \"background: url('./assets/images/sparkling_stars.gif') no-repeat; background-size: cover;\");\n  }\n  \n  showScoreInput() {\n    $j('#score-input').attr('style', 'display: block;');\n    $j('input').val();\n    $j('#enter-score').attr('style', 'display: block;');\n  }\n\n  resetSelf() {\n    this.ctx.cryptoMiner = new CryptoMiner(this.ctx, this.canvas);\n  }\n}\n\nexport default CryptoMiner;","const defaultListener = () => {\n  window.addEventListener('keydown', (e) => {\n    if ([37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n      e.preventDefault();\n    }\n  }, false);\n};\n\nexport default defaultListener;","import Coin from './coin';\nimport defaultListener from './default_listener';\nimport CryptoMiner from './crypto_miner';\n\nexport default function game() {\n  defaultListener();\n\n  const canvas = $j('#game-frame').nodes[0];\n  const startButton = $j('#start-button');\n  const pauseButton = $j('#pause-button');\n  const gameOverButton = $j('#game-over');\n  const muteButton = $j('#mute');\n  let lastDownTarget;\n  \n  const moreMenu = $j('#more-menu');\n  $j('#show-more').on('click', () => moreMenu.attr('style', 'display: block;'));\n  moreMenu.find('a').on('click', () => moreMenu.attr('style', 'display: none;'));\n\n  const highscoresList = $j('#highscores');\n  $j('#highscore-button').on('click', () => {\n    if (highscoresList.attr('style') === 'display: block;') {\n      highscoresList.attr('style', 'display: none;')\n    } else {\n      highscoresList.attr('style', 'display: block;')\n    }\n  });\n  \n  if (canvas.getContext) {\n    const ctx = canvas.getContext('2d');\n    ctx.cryptoMiner = new CryptoMiner(ctx, canvas);\n    ctx.cryptoMiner.startGame();\n    ctx.playMusic = true;\n\n    const pauseGame = () => {\n      startButton.attr('style', 'display: block; left: 173px;').html('Unpause');\n      pauseButton.attr('style', 'display: none;');\n      ctx.cryptoMiner.music.pause();\n      ctx.cryptoMiner.pause = true;\n      clearInterval(ctx.cryptoMiner.gameInterval);\n    }\n\n    const handleKeydown = (e) => {\n      ctx.cryptoMiner.handleKeypress(e.key);\n    };\n    \n    const focusOnGame = [canvas, startButton.nodes[0], pauseButton.nodes[0], gameOverButton.nodes[0], muteButton.nodes[0], muteButton.children().nodes[0]];\n    document.addEventListener('keydown', (e) => {\n      if (focusOnGame.includes(lastDownTarget)) {\n        handleKeydown(e);\n      }\n    }, false);\n\n    document.addEventListener('mousedown', (e) => {\n      lastDownTarget = e.target;\n      if (!focusOnGame.includes(lastDownTarget) && startButton.attr('style') !== 'display: block;') pauseGame();\n    }, false);\n\n    const startGame = () => {\n      $j('#panel').attr('style', 'display: block;');\n      $j('#pc').attr('style', 'display: block;');\n      ctx.fillStyle = '#010014';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.fill();\n      pauseButton.attr('style', 'display: block;')\n      $j('canvas').attr('style', \"background: url('./assets/images/moving_stars.gif') no-repeat; background-size: cover;\");\n      startButton.attr('style', 'display: none;');\n      ctx.cryptoMiner.pause = false;\n      ctx.cryptoMiner.gameInterval = setInterval(() => ctx.cryptoMiner.play(), 17);\n    };\n    \n    startButton.on('click', startGame);\n\n    pauseButton.on('click', pauseGame);\n\n    document.addEventListener('keypress', (e) => {\n      if (e.key === 'p' && ctx.cryptoMiner.gameInterval) {\n        console.log(ctx.cryptoMiner.pause)\n        if (ctx.cryptoMiner.pause) {\n          startGame();\n        } else {\n          pauseGame();\n        }\n      }\n    });\n\n    $j('#mute').on('click', () => {\n      ctx.playMusic = !ctx.playMusic\n    });\n\n    const saveScore = (money, round) => {\n      const newScore = {};\n      newScore.name = document.getElementById(\"input\").value.toUpperCase();\n      if (newScore.name.length === 0) newScore.name = '???'\n      newScore.money = Math.round(money * 100) / 100;\n      newScore.round = round;\n      firebase.database().ref('scores/').push(newScore);\n    };\n\n    $j('#game-over').find('b').on('click', () => {\n      ctx.cryptoMiner.resetSelf();\n      ctx.cryptoMiner.startGame();\n    });\n    $j('#score-input').on('submit', (e) => {\n      e.preventDefault();\n      saveScore(ctx.cryptoMiner.money, ctx.cryptoMiner.round);\n      ctx.cryptoMiner.resetSelf();\n      ctx.cryptoMiner.startGame();\n    });\n    $j('#game-over').find('b').on('mouseover', () => {\n      $j('#game-over').find('b').html('RESTART');\n    });\n    $j('#game-over').find('b').on('mouseout', () => {\n      $j('#game-over').find('b').html('GAME OVER');\n    });\n  }\n}","const magnet = new Image();\nmagnet.src = './assets/images/magnet.png';\n\nconst bitcoin = new Image();\nbitcoin.value = Math.round(Math.random() * 100) + 100;\nbitcoin.slowdown = 6;\nbitcoin.name = 'bitcoin';\nbitcoin.src = './assets/images/bitcoin.png';\n\nconst tron = new Image();\ntron.slowdown = 3.5;\ntron.name = 'tron';\ntron.value = Math.round(Math.random() * 100) + 20;\ntron.src = './assets/images/tron.png';\n\nconst penny = new Image();\npenny.value = 0.01\npenny.slowdown = 1.3;\npenny.name = 'penny';\npenny.src = './assets/images/penny.png';\n\n\nexport default {\n  magnet,\n  bitcoin,\n  tron,\n  penny,\n};","import images from './images';\nimport Music from './music';\n\nclass Magnet {\n  constructor(ctx, canvas, game) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.game = game;\n    this.points = [];\n    this.rotate = true;\n    this.forward = true;\n    this.rotationDiff = 0;\n    this.angle = 1;\n    this.rotation = 130;\n    this.x = 0;\n    this.y = 0;\n    this.translateX = canvas.width / 2;\n    this.dy = 6;\n    this.dx = 6;\n    this.maxReach = 225;\n    this.sound = new Music('./assets/audio/sliding.mp3', true);\n    this.initialMove = true;\n  }\n\n  drawmagnet() {\n    if (this.rotate) {\n      this.drawRotatingMagnet();\n    } else {\n      this.drawMovingMagnet();\n    }\n  }\n\n  drawMovingMagnet() {\n    if (this.returnedToStart()) return;\n    this.calculateMaxReach();\n    this.drawString();\n    this.calculateCoorOnCanvas();\n    this.generateMagneticPoints();\n\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    if (this.x + this.dx > this.maxReach || this.y + this.dy > this.maxReach) {\n      this.dx = -this.dx;\n      this.dy = -this.dy;\n    }\n    this.ctx.translate(this.translateX, 50);\n    this.ctx.rotate(this.angle);\n\n    this.x += this.dx\n    this.y += this.dy;\n\n    this.ctx.drawImage(images.magnet, this.x, this.y);\n    this.ctx.restore();\n  }\n\n  generateMagneticPoints() {\n    this.points = [];\n    for (let startRad = 0; startRad < 2 * Math.PI; startRad += Math.PI / 10) {\n      const x3 = this.game.x2 + 33 * Math.cos(startRad);\n      const y3 = this.game.y2 + 33 * Math.sin(startRad);\n      this.points.push([x3, y3]);\n    }\n    this.points.forEach(coord => {\n      this.ctx.fillStyle = 'green';\n      this.ctx.fillRect(coord[0] + Math.random() * 5, coord[1] + Math.random() * 5, 3, 3);\n    });\n  }\n\n  calculateCoorOnCanvas() {\n    this.game.l = Math.sqrt(this.x ** 2 + this.y ** 2) + images.magnet.height / 2 + 10;\n    this.game.x2 = (this.translateX + this.game.l * Math.cos(this.angle + 0.785398));\n    this.game.y2 = (50 + this.game.l * Math.sin(this.angle + 0.785398));\n  }\n\n  calculateMaxReach() {\n    const degrees = this.rotation - this.rotationDiff;\n    if (degrees <= 90 && degrees >= 0) {\n      this.maxReach = Math.abs(degrees - 45) + 210;\n    } else if (degrees > 90) {\n      this.maxReach = 250 - (degrees - 90) * 2;\n    } else {\n      this.maxReach = 250 + degrees * 2;\n    }\n  }\n\n  returnedToStart() {\n    if (this.y <= 0 && this.dy < 0) {\n      this.rotate = true;\n      this.handleCollectedCoins();\n      this.dx = 6;\n      this.dy = 6;\n      this.initialMove = true;\n      this.sound.pause();\n      return true;\n    }\n  }\n\n  handleCollectedCoins() {\n    while (this.game.collected.length > 0) {\n      if (this.game.names.length > 1) {\n        setTimeout(() => {\n          this.game.flashMessage(this.game.names.map(name => ('+' + name)));\n          this.game.names = [];\n        }, 300);\n      } else {\n        this.game.flashMessage('+' + this.game.names.pop());\n      }\n      this.game.money += this.game.collected.pop();\n    }\n  }\n\n  drawRotatingMagnet() {\n    if (this.dx !== 6 || this.dy !== 6) {\n      this.dx = 6;\n      this.dy = 6;\n    }\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0)\n    this.angle = (this.rotation - this.rotationDiff) * Math.PI / 180;\n    this.ctx.translate(this.translateX, this.y + 50)\n    this.ctx.rotate(this.angle);\n    this.ctx.drawImage(images.magnet, 0, 0);\n    this.ctx.restore();\n    this.handleRotate();\n  }\n\n  handleRotate() {\n    if (this.forward) {\n      this.rotationDiff++;\n      if (this.rotationDiff === 175) {\n        this.forward = false;\n        this.rotationDiff--;\n      }\n    } else {\n      this.rotationDiff--;\n      if (this.rotationDiff < 0) {\n        this.forward = true;\n        this.rotationDiff++;\n      }\n    }\n  }\n\n  handleKeypress(key) {\n    if (key === 'ArrowDown') {\n      if (this.initialMove) {\n        this.sound.play();\n        this.initialMove = false;\n      }\n      this.rotate = false;\n      if (this.dx < 0) {\n        this.dx = -this.dx;\n        this.dy = -this.dy;\n      }\n    } else if (key === 'ArrowUp' && !this.rotate) {\n      if (this.dx > 0) {\n        this.dx = -this.dx;\n        this.dy = -this.dy;\n      } else if (this.dx > -2.5) {\n        this.dx = this.dx * 1.05;\n        this.dy = this.dy * 1.05;\n      } else if (this.dx > -5) {\n        this.dx = this.dx * 1.02;\n        this.dy = this.dy * 1.02;\n      }\n    }\n  }\n\n  drawString() {\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.translate(this.translateX, 50)\n    this.ctx.rotate(this.angle);\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = 'white'\n    this.ctx.moveTo(0, 0);\n    this.ctx.lineTo(this.x, this.y);\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n\n  slowdown(amt) {\n    const newDx = this.dx / amt;\n    const newDy = this.dy / amt;\n\n    if (this.dx > 0) {\n      this.dx = -newDx;\n      this.dy = -newDy;\n    } else {\n      this.dx = newDx;\n      this.dy = newDy;\n    }\n  }\n\n}\n\nexport default Magnet;","class Music {\n  constructor(src, noLoop) {\n    this.music = document.createElement(\"audio\");\n    this.music.src = src;\n    this.music.setAttribute(\"preload\", \"auto\");\n    this.music.setAttribute(\"controls\", \"none\");\n    if (!noLoop) this.music.setAttribute(\"loop\", \"true\");\n    this.music.style.display = \"none\";\n    document.body.appendChild(this.music);\n  }\n\n  play() {\n    this.music.play();\n  }\n\n  pause() {\n    this.music.pause();\n  }\n}\n\nexport default Music;","import game from '/Users/Shirley/Desktop/Crypto-Miner/lib/game/game.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  game();\n})\n"],"sourceRoot":""}